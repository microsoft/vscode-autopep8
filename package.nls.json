{
    "extension.description": "Formatting support for Python files using the autopep8 formatter.",
    "command.restartServer": "Restart Server",
    "settings.args.description": "Arguments passed to autopep8 to format Python files. Each argument should be provided as a separate string in the array. \n Example: \n `\"autopep8.args\" = [\"--config\", \"<file>\"]`",
    "settings.cwd.description": "Sets the current working directory used to format Python files with autopep8. By default, it uses the root directory of the workspace `${workspaceFolder}`. You can set it to `${fileDirname}` to use the parent folder of the file being formatted as the working directory for autopep8.",
    "settings.path.description": "Path or command to be used by the extension to format Python files with autopep8. Accepts an array of a single or multiple strings. If passing a command, each argument should be provided as a separate string in the array. If set to `[\"autopep8\"]`, it will use the version of autopep8 available in the `PATH` environment variable. Note: Using this option may slowdown formatting. \n  Examples: \n  - `[\"~/global_env/autopep8\"]` \n  - `[\"conda\", \"run\", \"-n\", \"lint_env\", \"python\", \"-m\", \"autopep8\"]`",
    "settings.importStrategy.description": "Defines which autopep8 formatter binary to be used to format Python files. When set to `useBundled`, the extension will use the autopep8 formatter binary that is shipped with the extension. When set to `fromEnvironment`, the extension will attempt to use the autopep8 formatter binary and all dependencies that are available in the currently selected environment. **Note**: If the extension can't find a valid autopep8 formatter binary in the selected environment, it will fallback to using the binary that is shipped with the extension. The `autopep8.path` setting takes precedence and overrides the behavior of `autopep8.importStrategy`.",
    "settings.importStrategy.useBundled.description": "Always use the bundled version of autopep8 to format Python files.",
    "settings.importStrategy.fromEnvironment.description": "Use the autopep8 binary from the selected Python environment. If the extension fails to find a valid autopep8 binary, it will fallback to using the bundled version of autopep8.",
    "settings.interpreter.description": "Path to a Python executable or a command that will be used to launch the autopep8 server and any subprocess. Accepts an array of a single or multiple strings. When set to `[]`, the extension will use the path to the selected Python interpreter. If passing a command, each argument should be provided as a separate string in the array.",
    "settings.showNotifications.description": "Controls when notifications are shown by this extension.",
    "settings.showNotifications.off.description": "All notifications are turned off, any errors or warnings when formatting Python files are still available in the logs.",
    "settings.showNotifications.onError.description": "Notifications are shown only in the case of an error when formatting Python files.",
    "settings.showNotifications.onWarning.description": "Notifications are shown for any errors and warnings when formatting Python files.",
    "settings.showNotifications.always.description": "Notifications are show for anything that the server chooses to show when formatting Python files."
}